✅ Problem Description: CLI TODO Application
--------------------------------------------------------------------------------------------
Objective:

Build a Command-Line Interface (CLI) TODO application using OOP principles in Python. 
The application should allow users to:

    - Add new tasks
    - View all tasks
    - Mark tasks as completed
    - Delete tasks
    - Save/load tasks from a file

Requirements:
-------------------------------

Each task must have a unique ID, a description, and a status (completed or pending).
The app should maintain a persistent list of tasks by saving to and loading from a file.
OOP principles like encapsulation, abstraction, and modularization should be used.
Code should be structured in multiple files.
Include unit tests for all core functionalities using the unittest module.

📁 Project Structure

        todo_app/
        │
        ├── main.py               # Entry point for the CLI app
        ├── task.py               # Task class definition
        ├── task_manager.py       # TaskManager class for managing tasks
        ├── storage.py            # Handles saving/loading from a file
        ├── tests/
        │   ├── __init__.py
        │   ├── test_task.py
        │   ├── test_task_manager.py
        │   └── test_storage.py
        └── tasks.json            # JSON file to persist tasks


🔍 Feature List
